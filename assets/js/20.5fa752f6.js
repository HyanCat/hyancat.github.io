(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{572:function(t,e,s){"use strict";s.r(e);var a=s(11),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("自从开始了 Hybrid App，就一发不可收拾了。以后有空会记录一些 Hybrid 在多端开发中的问题。")]),t._v(" "),s("h3",{attrs:{id:"问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),s("p",[t._v("由于某个地方的文字显示需要用到特殊字体，在 iOS 和 Android 中加载自定义的字体也都是很容易的，但在 webview 中自定义字体却没那么简单。")]),t._v(" "),s("h3",{attrs:{id:"解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决"}},[t._v("#")]),t._v(" 解决")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("各端按照系统支持的方案各自实现")]),t._v(" "),s("ol",[s("li",[t._v("iOS 在 info.plist 中配置加载自定义字体")]),t._v(" "),s("li",[t._v("Android 字体丢进 Assets 里，按本地文件方式加载即可")])]),t._v(" "),s("p",[t._v("优点：遵循各平台开发（其实也没什么优点）。缺点：各端实现，维护起来稍显麻烦，并且字体只能内置在工程中。")])]),t._v(" "),s("li",[s("p",[t._v("比较 🐔 贼的方法，js 注入 style")]),t._v(" "),s("p",[t._v("字体丢进工程里或远程下载，只要能找到字体文件就行。读取文件，转成 base64 编码，js 在 head 标签中注入一段 css style，如下：")]),t._v(" "),s("div",{staticClass:"language-ObjectiveC extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("base64 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" getBase64FromFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"zhijianhualiang"')]),t._v(" ofType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"ttf"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("js "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSString stringWithFormat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("@\"\\\n                var css = '@font-face { font-family: \\\"SYZJHLT\\\"; src: url(data:font/ttf;base64,%@) format(\\\"truetype\\\");}'; \\\n                var head = document.getElementsByTagName('head')[0], \\\n                style = document.createElement('style'); \\\n                style.type = 'text/css'; \\\n                if (style.styleSheet) { \\\n                    style.styleSheet.cssText = css; \\\n                } else { \\\n                    style.appendChild(document.createTextNode(css)); \\\n                } \\\n                head.appendChild(style);\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" base64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("优点：多端统一实现，效果也很好。缺点：字体转的 base64 较大，如果需要多个字体或变更字体就不太好。")])]),t._v(" "),s("li",[s("p",[t._v("不完美的方法，拦截字体文件请求")]),t._v(" "),s("p",[t._v("拦截 html 的字体请求，然后返回一个本地字体文件。当然由于 WKWebview 无法拦截，故而不考虑，不可能再去换更老效率更差的 UIWebView。")])]),t._v(" "),s("li",[s("p",[t._v("更完美的方法，内置静态服务器")]),t._v(" "),s("p",[t._v("内置一个静态服务器，webview 中请求的字体文件 url 为本地服务器的 url，让本地服务器处理 url 并返回字体文件。")]),t._v(" "),s("ol",[s("li",[t._v("iOS "),s("a",{attrs:{href:"https://github.com/swisspol/GCDWebServer",target:"_blank",rel:"noopener noreferrer"}},[t._v("GCDWebServer"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("Android "),s("a",{attrs:{href:"https://github.com/NanoHttpd/nanohttpd",target:"_blank",rel:"noopener noreferrer"}},[t._v("NanoHttpd"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("优点：可扩展性强，字体随便变，其它 css、js 等静态文件都可以代理。缺点：各自实现 http server 稍麻烦，但这也是一劳永逸的事。")]),t._v(" "),s("p",[t._v("具体如何实现，之后应该会有一篇记录。")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);